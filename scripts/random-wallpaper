#!/home/fkalter/perl

use 5.016000;
use strict;
use warnings;
use Path::Class;
use Math::Random::Secure qw( irand );
use Carp;
use IPC::Open3 qw( open3 );

my ($read, $write, $pid, $fh);

# prepare enviroment for calling xfconf-query from crontab
# this requires acces to the dbus (which isn't available in the crontab session)
# The bit below extracts the info from ~/.dbus/session-bus and makes it enviroment variables for its child processes

open($fh, "<", "/var/lib/dbus/machine-id") or croak "Can't open machine_id: $!";
my $machine_id = do { local $/ = undef; <$fh> };
close($fh);
chomp $machine_id;
my $dbus_session_file = "/home/fkalter/.dbus/session-bus/${machine_id}-0";
if (-e $dbus_session_file) {
    open($fh, "<", $dbus_session_file) or croak "Could not open $dbus_session_file: $!";
    while (<$fh>) {
        my ($var, $val) = /([A-Z_]+)=(.*)/x;
        local $ENV{$var} = $val if ($var);
    }
    close($fh);
}

# The path where the wallpapers can be found they schould be in the format
# background-0.jpg background-1.jpg
# 0 being the left monitor, and 1 being the right

my $path = dir("/home/fkalter/Pictures/wallpapers");
opendir(my $dh, $path);
my @lefts = grep {/-0\.[a-z]{3}$/x} readdir($dh);

$pid = open3($write, $read, $read,
    qq( xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitor0/image-path ));
waitpid($pid, 0);
my $current = <$read>;
chomp $current;

# make sure it always changes ( the one picked at random should not be same as the current one )
my $left_monitor = file($path, $lefts[irand(scalar @lefts)]);
while ($left_monitor eq $current) {
    $left_monitor = file($path, $lefts[irand(scalar @lefts)]);
}
my $right_monitor = $left_monitor =~ s/^(.+)-(0)(\.[a-z]{3})$/$1-1$3/xr;

# call xfconf-query
$pid = open3($write, $read, $read,
    qq(xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitor0/image-path -s $left_monitor ));
waitpid($pid, 0);
$pid = open3($write, $read, $read,
    qq(xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitor1/image-path -s $right_monitor));
waitpid($pid, 0);

